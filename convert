#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>

int base_check(char *base);

int ft_atoi_base(char *str, char *base);

int ft_strlen(char *s);

void len_count(long nb, int *len, int base_len)
{
	if(nb < 0)
	{
		(*len)++;
		nb *= -1;
	}
	if (nb >= base_len)
		len_count(nb / base_len, len, base_len);
	(*len)++;
}

void fill_res(char *res, long tmp, int base_len, char *base_to, int *i)
{
	if (tmp >= base_len)
	{
		fill_res(res, (tmp / base_len), base_len, base_to, i);
	}
	res[*i] = base_to[tmp % base_len];
	(*i)++;
}

char *ft_itoa_base(long tmp, char *base_to)
{
	int len;
	int base_len;
	char *res;
	int i;

	len = 0;
	base_len = ft_strlen(base_to);
	len_count(tmp, &len, base_len);
	res = malloc(sizeof(char) * (len + 1));
	if (!res)
		return (NULL);
	i = 0;
	if (tmp < 0)
	{
		tmp *= -1;
		res[i] = '-';
		i++;
	}
	fill_res(res, tmp, base_len, base_to, &i);
	res[len] = '\0';
	return (res);
}

char *ft_convert_base(char *nbr, char *base_from, char *base_to)
{
	char	*res;
	long	tmp;

	if (base_check(base_from) || base_check(base_to))
		return (NULL);
	tmp = ft_atoi_base(nbr, base_from);
	res = ft_itoa_base(tmp, base_to);
	if (!res)
		return (NULL);
	return (res);
}

int main()
{
	char *nbr = "-127";
	char *base_from = "0123456789";
	char *base_to = "0123456789abcdef";
	char *res = ft_convert_base(nbr, base_from, base_to);
	printf("%s\n", res);
	return (0);
}
